var FireGrapher=function(){"use strict";return FireGrapher=function(){},FireGrapher.prototype.graph=function(e,t,i){this.firebaseRef=t,console.log(e),console.log(t),console.log(i);var a=["grid","line","scatter"];if(-1===a.indexOf(i.type))throw new Error('Invalid chart type. Must be "grid", "line", or "scatter"');this.drawGraph(e);var n=i.path.split("/");console.log(n),console.log("Parsing paths"),this.parsePathNode(["/"],n,0).then(function(e){console.log("Paths parsed"),console.log(e),e.forEach(function(e){console.log(e),t.child(e).on("child_added",function(t){var a,n=t.val(),o=e.split("/"),r=o[o.length-2];a="$"===i.line[0]?r:n[i.line],this.addToLineGraph({line:a,xCoord:n[i.xCoord.value],yCoord:n[i.yCoord.value]})}.bind(this))}.bind(this))}.bind(this))},FireGrapher.prototype.parsePathNode=function(e,t,i){return new RSVP.Promise(function(a){console.log("Calling parsePathNode() with index "+i);var n=t[i];if("*"===n[0])console.assert(i===t.length-1,"WHATTTT?"),console.log(i+": individual record"),console.log(e),a(e);else if("$"===n[0]){console.log(i+": param");var o=[];e.forEach(function(e){o.push(new RSVP.Promise(function(t){console.log(e),this.firebaseRef.child(e).once("value",function(i){console.log(i);var a=[];i.forEach(function(t){console.log(t.name()),a.push(e+t.name()+"/")}.bind(this)),t(a)}.bind(this))}.bind(this)))}.bind(this)),new RSVP.all(o).then(function(e){var n=[];e.forEach(function(e){e.forEach(function(e){n.push(e)})}),console.log(n),this.parsePathNode(n,t,i+1).then(function(e){console.log("Final paths: "+i),console.log(e),a(e)})}.bind(this))}else{console.log(i+": regular node");var r=[];e.forEach(function(e){r.push(e+=n+"/")}),this.parsePathNode(r,t,i+1).then(function(e){console.log("Final paths: "+i),console.log(e),a(e)})}}.bind(this))},FireGrapher.prototype.addToLineGraph=function(e){"undefined"==typeof this.graphData[e.line]&&(this.graphData[e.line]=[]),this.graphData[e.line][e.xCoord]=e.yCoord;var t=this.graphLines[e.line];"undefined"==typeof t?(t=d3.svg.line().x(function(e,t){return this.interpolateXCoord(t)}.bind(this)).y(function(e){return this.interpolateYCoord(e)}.bind(this)).interpolate("basis"),this.graph.append("svg:path").attr("d",t(this.graphData[e.line])).attr("id",e.line),this.graphLines[e.line]=t):this.graph.select("#"+e.line).data([this.graphData[e.line]]).attr("d",t)},FireGrapher.prototype.drawGraph=function(e){this.drawLineGraph(e)},FireGrapher.prototype.drawLineGraph=function(e){var t=500,i=150,a=0,n=30,o=40,r=150;this.graphData={},this.graphLines={},this.interpolateXCoord=d3.scale.linear().domain([a,n]).range([0,t]),this.interpolateYCoord=d3.scale.linear().domain([o,r]).range([i,0]),this.graph=d3.select(e).append("svg:svg").attr("width","100%").attr("height","100%"),this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+i+")").call(d3.svg.axis().scale(d3.scale.linear().domain([a,n]).range([0,t])).ticks(4).tickSubdivide(1).tickSize(-i,-i,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(d3.scale.linear().domain([o,r]).range([i,0])).ticks(8).tickSubdivide(0).tickSize(-t,-t,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start")},FireGrapher}();"undefined"!=typeof module&&(module.exports=FireGrapher);