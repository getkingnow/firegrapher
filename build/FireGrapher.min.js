var FireGrapher=function(){"use strict";return FireGrapher=function(){},FireGrapher.prototype.graph=function(t,i,e){this.cssSelector=t,this.firebaseRef=i,this.validateConfig(e),this.config=e,this.setDefaultConfig(),this.drawGraph(),this.pathNodes=e.path.split("/"),this.parsePath(["/"],0)},FireGrapher.prototype.parsePath=function(t,i){if(i===this.pathNodes.length){var e="*"===this.pathNodes[this.pathNodes.length-1]?"child_added":"value";t.forEach(function(t){this.listenForNewRecords(t,e)}.bind(this))}else{var r=this.pathNodes[i];if("*"===r[0]){if(i!==this.pathNodes.length-1)throw new Error('You can only use * as the last character in your "path"');this.parsePath(t,i+1)}else t.forEach("$"===r[0]?function(t){this.firebaseRef.child(t).on("child_added",function(e){this.parsePath([t+e.name()+"/"],i+1)}.bind(this))}.bind(this):function(t){this.parsePath([t+=r+"/"],i+1)}.bind(this))}},FireGrapher.prototype.listenForNewRecords=function(t,i){var e=t.split("/"),r=e[e.length-2];switch(this.config.type){case"table":this.firebaseRef.child(t).on(i,function(t){var i=t.val(),e=[];this.config.columns.forEach(function(t){e.push(i[t.value]?i[t.value]:"")}),this.addToTable(e)}.bind(this));break;case"line":this.firebaseRef.child(t).on(i,function(t){var i,e=t.val();i="$"===this.config.line[0]?r:e[this.config.line];var o;o="undefined"!=typeof this.config.xCoord.stream&&this.config.xCoord.stream?this.streamCounts[i]?this.streamCounts[i]:0:parseInt(e[this.config.xCoord.value]),this.addDataPointToLineGraph({line:i,xCoord:o,yCoord:parseInt(e[this.config.yCoord.value])})}.bind(this))}},FireGrapher.prototype.addDataPointToTable=function(t){this.tableRows.push(t);var i=this.innerTable.selectAll("div.row").data(this.tableRows).enter().append("div").attr("class","row");i.selectAll("div.cell").data(function(t){return t}).enter().append("div").attr("class","cell").attr("width",function(t,i){return this.config.columns[i].width}.bind(this)).text(function(t){return t})},FireGrapher.prototype.addDataPointToLineGraph=function(t){"undefined"==typeof this.graphData[t.line]&&(this.graphData[t.line]={coordinates:[]},this.streamCounts[t.line]=0),this.streamCounts[t.line]+=1;var i=this.graphData[t.line].coordinates;i.length>0&&t.xCoord<=i[i.length-1].x?(i.push({x:t.xCoord,y:t.yCoord}),i.sort(function(t,i){return i.x-t.x})):i.push({x:t.xCoord,y:t.yCoord}),i.length>this.config.xCoord.limit&&(i.shift(),this.config.xCoord.min=this.streamCounts[t.line]-this.config.xCoord.limit,this.renderGraph());var e=!1;this.config.xCoord.min>t.xCoord&&(this.config.xCoord.min=t.xCoord,e=!0),this.config.xCoord.max<t.xCoord&&(this.config.xCoord.max=t.xCoord,e=!0),this.config.yCoord.min>t.yCoord&&(this.config.yCoord.min=t.yCoord,e=!0),this.config.yCoord.max<t.yCoord&&(this.config.yCoord.max=t.yCoord,e=!0),e&&this.renderGraph();var r=this.graphLines[t.line];"undefined"==typeof r?r=this.addLineToGraph(t.line,i):(this.graph.select("path."+t.line).data([i]).attr("d",r),this.graph.append("circle").attr("class","dot "+t.line).attr("cx",this.interpolateXCoord(t.xCoord)).attr("cy",this.interpolateYCoord(t.yCoord)).attr("r",3.5))},FireGrapher.prototype.validateConfig=function(t){var i=["table","line","scatter"];if("undefined"==typeof t.type)throw new Error('No graph "type" specified. Must be "table", "line", or "scatter"');if(-1===i.indexOf(t.type))throw new Error('Invalid graph "type" specified. Must be "table", "line", or "scatter"');if("undefined"==typeof t.path)throw new Error('No "path" to individual record specified.');switch(t.type){case"table":if("undefined"==typeof t.columns)throw new Error('No table "columns" specified.');t.columns.forEach(function(t){if("undefined"==typeof t.label)throw new Error('Missing "columns" label.');if("undefined"==typeof t.value)throw new Error('Missing "columns" value.')});break;case"line":if("undefined"==typeof t.xCoord)throw new Error('No "xCoord" specified.');if("undefined"==typeof t.yCoord)throw new Error('No "yCoord" specified.');break;case"scatter":}},FireGrapher.prototype.setDefaultConfig=function(){"line"===this.config.type&&(this.config.graph=this.config.graph?this.config.graph:{},this.config.graph.width=this.config.graph.width?this.config.graph.width:500,this.config.graph.height=this.config.graph.height?this.config.graph.height:150,this.config.xCoord.min=this.config.xCoord.min?this.config.xCoord.min:0,this.config.xCoord.max=this.config.xCoord.max?this.config.xCoord.max:50,this.config.yCoord.min=this.config.yCoord.min?this.config.yCoord.min:0,this.config.yCoord.max=this.config.yCoord.max?this.config.yCoord.max:200)},FireGrapher.prototype.renderGraph=function(){var t=.05*this.config.yCoord.max;for(this.interpolateXCoord=d3.scale.linear().domain([this.config.xCoord.min,this.config.xCoord.max]).range([0,this.config.graph.width]),this.interpolateYCoord=d3.scale.linear().domain([this.config.yCoord.min-t,this.config.yCoord.max+t]).range([this.config.graph.height,0]);null!==this.graph.select("g").remove()[0][0];);for(this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+this.config.graph.height+")").call(d3.svg.axis().scale(this.interpolateXCoord).ticks(4).tickSubdivide(1).tickSize(-this.config.graph.height,-this.config.graph.height,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(this.interpolateYCoord).ticks(8).tickSubdivide(0).tickSize(-this.config.graph.width,-this.config.graph.width,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start");null!==this.graph.select("path").remove()[0][0];);for(;null!==this.graph.select("circle").remove()[0][0];);for(var i in this.graphLines)this.graphLines.hasOwnProperty(i)&&this.addLineToGraph(i,this.graphData[i].coordinates)},FireGrapher.prototype.addLineToGraph=function(t,i){var e=d3.svg.line().defined(function(t){return null!==t}).x(function(t){return this.interpolateXCoord(t.x)}.bind(this)).y(function(t){return this.interpolateYCoord(t.y)}.bind(this)).interpolate("linear");this.graph.append("svg:path").attr("d",e(this.graphData[t].coordinates)).attr("class",t),this.graphLines[t]=e,this.graph.selectAll("circle."+t).data(i).enter().append("circle").attr("class","dot "+t).attr("cx",e.x()).attr("cy",e.y()).attr("r",3.5)},FireGrapher.prototype.drawGraph=function(){switch(this.config.type){case"table":this.drawTable();break;case"line":this.drawLineGraph()}},FireGrapher.prototype.drawLineGraph=function(){this.graphData={},this.graphLines={},this.streamCounts={},this.graph=d3.select(this.cssSelector).append("svg:svg").attr("width","100%").attr("height","100%"),this.renderGraph()},FireGrapher.prototype.drawTable=function(){this.tableHeader={},this.tableRows=[],this.outerTable=d3.select(this.cssSelector).append("div").attr("class","table outer"),this.outerTable.append("div").attr("class","row").selectAll("div.header").data(this.config.columns).enter().append("div").attr("class","header").attr("width",function(t){return t.width}).text(function(t){return t.label}),this.innerTable=this.outerTable.append("div").attr("class","table inner")},FireGrapher}();"undefined"!=typeof module&&(module.exports=FireGrapher);