var FireGrapher = (function() {
  "use strict";

  FireGrapher = function () {
    return;
  };
FireGrapher.prototype.graph=function(i,t,e){this.cssSelector=i,this.firebaseRef=t,this.validateConfig(e),this.config=e,this.setDefaultConfig(),this.draw(),this.pathNodes=e.path.split("/"),this.parsePath(["/"],0)},FireGrapher.prototype.setDefaultConfig=function(){switch(this.config.type){case"line":case"scatter":this.config.graph=this.config.graph?this.config.graph:{},this.config.graph.width=this.config.graph.width?this.config.graph.width:500,this.config.graph.height=this.config.graph.height?this.config.graph.height:150,this.config.xCoord.min=this.config.xCoord.min?this.config.xCoord.min:0,this.config.xCoord.max=this.config.xCoord.max?this.config.xCoord.max:50,this.config.yCoord.min=this.config.yCoord.min?this.config.yCoord.min:0,this.config.yCoord.max=this.config.yCoord.max?this.config.yCoord.max:200}},FireGrapher.prototype.validateConfig=function(i){var t=["table","line","scatter"];if("undefined"==typeof i.type)throw new Error('No graph "type" specified. Must be "table", "line", or "scatter"');if(-1===t.indexOf(i.type))throw new Error('Invalid graph "type" specified. Must be "table", "line", or "scatter"');if("undefined"==typeof i.path)throw new Error('No "path" to individual record specified.');switch(i.type){case"table":if("undefined"==typeof i.columns)throw new Error('No table "columns" specified.');i.columns.forEach(function(i){if("undefined"==typeof i.label)throw new Error('Missing "columns" label.');if("undefined"==typeof i.value)throw new Error('Missing "columns" value.')});break;case"line":if("undefined"==typeof i.xCoord)throw new Error('No "xCoord" specified.');if("undefined"==typeof i.yCoord)throw new Error('No "yCoord" specified.');break;case"scatter":}},FireGrapher.prototype.parsePath=function(i,t){if(t===this.pathNodes.length){var e="*"===this.pathNodes[this.pathNodes.length-1]?"child_added":"value";i.forEach(function(i){this.listenForNewRecords(i,e)}.bind(this))}else{var o=this.pathNodes[t];if("*"===o[0]){if(t!==this.pathNodes.length-1)throw new Error('You can only use * as the last character in your "path"');this.parsePath(i,t+1)}else i.forEach("$"===o[0]?function(i){this.firebaseRef.child(i).on("child_added",function(e){this.parsePath([i+e.name()+"/"],t+1)}.bind(this))}.bind(this):function(i){this.parsePath([i+=o+"/"],t+1)}.bind(this))}},FireGrapher.prototype.listenForNewRecords=function(i,t){var e=i.split("/"),o=e[e.length-2];switch(this.config.type){case"table":this.firebaseRef.child(i).on(t,function(i){var t=i.val(),e=[];this.config.columns.forEach(function(i){e.push("undefined"!=typeof t[i.value]?t[i.value].toString():"")}),this.addDataPointToTable(e)}.bind(this));break;case"line":case"scatter":this.firebaseRef.child(i).on(t,function(i){var t,e=i.val(),r="$"===this.config.line[0]?o:e[this.config.line];t="undefined"!=typeof this.config.xCoord.stream&&this.config.xCoord.stream?this.graphData[r]&&this.graphData[r].streamCount?this.graphData[r].streamCount:0:parseInt(e[this.config.xCoord.value]),this.addDataPointToGraph({series:r,xCoord:t,yCoord:parseInt(e[this.config.yCoord.value])},this.config.type)}.bind(this))}};
FireGrapher.prototype.addDataPointToTable=function(t){this.tableRows.push(t),this.table.selectAll("div.row").data(this.tableRows).enter().append("div").attr("class","row clearfix").selectAll("div.cell").data(function(t){return t}).enter().append("div").attr("class","cell").attr("width",function(t,i){return this.config.columns[i].width}.bind(this)).text(function(t){return t})},FireGrapher.prototype.addDataPointToGraph=function(t,i){"undefined"==typeof this.graphData[t.series]&&(this.graphData[t.series]={streamCount:0,coordinates:[]}),this.graphData[t.series].streamCount+=1;var r=this.graphData[t.series].coordinates;r.push(t),r.length>1&&t.xCoord<=r[r.length-2].xCoord&&r.sort(function(t,i){return i.xCoord-t.xCoord});var a=!1;switch(this.config.xCoord.limit&&r.length>this.config.xCoord.limit&&(r.shift(),this.config.xCoord.min=this.graphData[t.series].streamCount-this.config.xCoord.limit,a=!0),this.config.xCoord.min>t.xCoord&&(this.config.xCoord.min=t.xCoord,a=!0),this.config.xCoord.max<t.xCoord&&(this.config.xCoord.max=t.xCoord,a=!0),this.config.yCoord.min>t.yCoord&&(this.config.yCoord.min=t.yCoord,a=!0),this.config.yCoord.max<t.yCoord&&(this.config.yCoord.max=t.yCoord,a=!0),a&&this.drawGraph(),i){case"line":this.drawLine(t.series,r),this.drawDataPoints(t.series,r);break;case"scatter":this.drawDataPoints(t.series,r)}},FireGrapher.prototype.drawLine=function(t,i){var r=d3.svg.line().defined(function(t){return null!==t}).x(function(t){return this.interpolateXCoord(t.xCoord)}.bind(this)).y(function(t){return this.interpolateYCoord(t.yCoord)}.bind(this)).interpolate("linear");0===this.graph.selectAll("path."+t)[0].length&&this.graph.append("path").attr("class",t),this.graph.select("path."+t).data([i]).attr("d",r(i))},FireGrapher.prototype.drawDataPoints=function(t,i){this.graph.selectAll("circle."+t).data(i).enter().append("circle").attr("class","dot "+t).attr("cx",function(t){return this.interpolateXCoord(t.xCoord)}.bind(this)).attr("cy",function(t){return this.interpolateYCoord(t.yCoord)}.bind(this)).attr("r",3.5)},FireGrapher.prototype.drawScales=function(){for(;null!==this.graph.select("g").remove()[0][0];);this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+this.config.graph.height+")").call(d3.svg.axis().scale(this.interpolateXCoord).ticks(4).tickSubdivide(1).tickSize(-this.config.graph.height,-this.config.graph.height,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(this.interpolateYCoord).ticks(8).tickSubdivide(0).tickSize(-this.config.graph.width,-this.config.graph.width,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start")},FireGrapher.prototype.drawGraph=function(){var t=.05*this.config.yCoord.max;for(this.interpolateXCoord=d3.scale.linear().domain([this.config.xCoord.min,this.config.xCoord.max]).range([0,this.config.graph.width]),this.interpolateYCoord=d3.scale.linear().domain([this.config.yCoord.min-t,this.config.yCoord.max+t]).range([this.config.graph.height,0]),this.drawScales();null!==this.graph.select("path").remove()[0][0];);for(;null!==this.graph.select("circle").remove()[0][0];);for(var i in this.graphData)this.graphData.hasOwnProperty(i)&&(this.drawLine(i,this.graphData[i].coordinates),this.drawDataPoints(i,this.graphData[i].coordinates))},FireGrapher.prototype.draw=function(){switch(this.config.type){case"table":this.tableRows=[],this.table=d3.select(this.cssSelector).append("div").attr("class","table"),this.table.append("div").attr("class","row clearfix").selectAll("div.header").data(this.config.columns).enter().append("div").attr("class","header").attr("width",function(t){return t.width}).text(function(t){return t.label});break;case"line":case"scatter":this.graphData={},this.graph=d3.select(this.cssSelector).append("svg:svg").attr("width","100%").attr("height","100%"),this.drawGraph()}};
  return FireGrapher;
})();

/* jshint -W117 */
if (typeof module !== "undefined") {
  module.exports = FireGrapher;
}