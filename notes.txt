- Chart types
  - Grid
    - headers (maybe)
    - columns
    - what is a new row
  - Line graph
    - x-coord
    - y-coord
  - Histogram
    - y-label
    - what is an individual record
    - what is the record’s value
  - Scatter plot
    - x-coord
    - y-coord
  - Pie chart
    - what is an individual record
    - what is the record’s value
  - Gauge/ticker
    - Path to a value
    - Label
  - Map (all locations, heat map, per state/country)
    - out of scope
- Technologies
  - Firebase
  - Underscore (for client-side filtering)
  - D3.js (on npm, d3, d3-grid, d3-chart, d3-geomap, all here: https://www.npmjs.org/search?q=d3)
  - React?
- Plan
  - Goals: Grid, line graph, scatter plot
  - Day 1: parsable schema for each goal above and API (together)
  - Day 2: Define what the data needs to look like going into D3 for each goal above (Tony), start implementing user API which connects to Firebase and start test framework (Jacob)
  - Day 3: Sending correct data to D3 (Jacob) and rendering data for grid (Tony)
  - Day 4: Line and scatter (together)
  - Day 5: Clean up and make demo
- Examples
  - Users grid
    - Data layout
      /users/
        /uid1/
          /firstName
          /lastName
          /password
          /…
        /uid2/
          /firstName
          /lastName
          /password
          /...
    - HTML
      <div id=“userGrid”></div>
    - JS
      FireGrapher.chart($(“#userGrid), firebaseRef, {
        type: “grid”,
        headers: “
        x-coord-“/{stock-ticker}/*/price”
        lines: {stock-ticker}
      });
  - Stock chart
    - Data layout
      /stocks
        /MSFT
        /-asdfasdf
                 /time
                 /price
        /YHOO
        /AAPL
  - Code samples
    firebaseRef.child(“users”).on(“child_added” ,f(snap) {
      underscore
      d3.add(snap.firstname, ….)

    firebaseRef.chid9”users).on(“child_changed”)

    firebaseRef.chid9”users).on(“child_removed”)

    firebaseRef.chid(users).limit(1000).on(“child_changed”)