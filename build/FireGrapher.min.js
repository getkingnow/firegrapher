var FireGrapher=function(){"use strict";return FireGrapher=function(){},FireGrapher.prototype.graph=function(i,t,e){this.cssSelector=i,this.firebaseRef=t,this.config=e;var o=["grid","line","scatter"];if(-1===o.indexOf(e.type))throw new Error('Invalid chart type. Must be "grid", "line", or "scatter"');this.drawGraph();var n=e.path.split("/");console.log(n),console.log("Parsing paths"),this.parsePathNode(["/"],n,0).then(function(i){console.log("Paths parsed"),console.log(i),i.forEach(function(i){console.log(i),this.firebaseRef.child(i).on("child_added",function(t){var o,n=t.val(),a=i.split("/"),r=a[a.length-2];o="$"===e.line[0]?r:n[e.line],this.addToLineGraph({line:o,xCoord:n[e.xCoord.value],yCoord:n[e.yCoord.value]})}.bind(this))}.bind(this))}.bind(this))},FireGrapher.prototype.parsePathNode=function(i,t,e){return new RSVP.Promise(function(o){console.log("Calling parsePathNode() with index "+e);var n=t[e];if("*"===n[0])console.assert(e===t.length-1,"WHATTTT?"),console.log(e+": individual record"),console.log(i),o(i);else if("$"===n[0]){console.log(e+": param");var a=[];i.forEach(function(i){a.push(new RSVP.Promise(function(t){console.log(i),this.firebaseRef.child(i).once("value",function(e){console.log(e);var o=[];e.forEach(function(t){console.log(t.name()),o.push(i+t.name()+"/")}.bind(this)),t(o)}.bind(this))}.bind(this)))}.bind(this)),new RSVP.all(a).then(function(i){var n=[];i.forEach(function(i){i.forEach(function(i){n.push(i)})}),console.log(n),this.parsePathNode(n,t,e+1).then(function(i){console.log("Final paths: "+e),console.log(i),o(i)})}.bind(this))}else{console.log(e+": regular node");var r=[];i.forEach(function(i){r.push(i+=n+"/")}),this.parsePathNode(r,t,e+1).then(function(i){console.log("Final paths: "+e),console.log(i),o(i)})}}.bind(this))},FireGrapher.prototype.addToLineGraph=function(i){"undefined"==typeof this.graphData[i.line]&&(this.graphData[i.line]=[]),this.graphData[i.line][i.xCoord]=i.yCoord;var t=this.graphLines[i.line];"undefined"==typeof t?(t=d3.svg.line().x(function(i,t){return this.interpolateXCoord(t)}.bind(this)).y(function(i){return this.interpolateYCoord(i)}.bind(this)).interpolate("basis"),this.graph.append("svg:path").attr("d",t(this.graphData[i.line])).attr("id",i.line),this.graphLines[i.line]=t):this.graph.select("#"+i.line).data([this.graphData[i.line]]).attr("d",t)},FireGrapher.prototype.drawGraph=function(){this.drawLineGraph()},FireGrapher.prototype.drawLineGraph=function(){var i=this.config.graph&&this.config.graph.width?this.config.graph.width:500,t=this.config.graph&&this.config.graph.height?this.config.graph.height:150,e=this.config.xCoord.min?this.config.xCoord.min:0,o=this.config.xCoord.max?this.config.xCoord.max:50,n=this.config.yCoord.min?this.config.yCoord.min:0,a=this.config.yCoord.max?this.config.yCoord.max:200;this.graphData={},this.graphLines={},this.interpolateXCoord=d3.scale.linear().domain([e,o]).range([0,i]),this.interpolateYCoord=d3.scale.linear().domain([n,a]).range([t,0]),this.graph=d3.select(this.cssSelector).append("svg:svg").attr("width","100%").attr("height","100%"),this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+t+")").call(d3.svg.axis().scale(d3.scale.linear().domain([e,o]).range([0,i])).ticks(4).tickSubdivide(1).tickSize(-t,-t,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(d3.scale.linear().domain([n,a]).range([t,0])).ticks(8).tickSubdivide(0).tickSize(-i,-i,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start")},FireGrapher}();"undefined"!=typeof module&&(module.exports=FireGrapher);