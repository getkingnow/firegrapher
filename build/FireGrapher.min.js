var FireGrapher=function(){"use strict";return FireGrapher=function(){},FireGrapher.prototype.graph=function(i,t,o){this.cssSelector=i,this.firebaseRef=t,this.config=o;var n=["grid","line","scatter"];if(-1===n.indexOf(o.type))throw new Error('Invalid chart type. Must be "grid", "line", or "scatter"');"undefined"==typeof this.config.graph&&(this.config.graph={}),this.config.graph.width=this.config.graph.width?this.config.graph.width:500,this.config.graph.height=this.config.graph.height?this.config.graph.height:150,this.config.xCoord.min=this.config.xCoord.min?this.config.xCoord.min:0,this.config.xCoord.max=this.config.xCoord.max?this.config.xCoord.max:50,this.config.yCoord.min=this.config.yCoord.min?this.config.yCoord.min:0,this.config.yCoord.max=this.config.yCoord.max?this.config.yCoord.max:200,this.drawGraph();var e=o.path.split("/");console.log(e),console.log("Parsing paths"),this.parsePathNode(["/"],e,0).then(function(i){console.log("Paths parsed"),console.log(i),i.forEach(function(i){console.log(i),this.firebaseRef.child(i).on("child_added",function(t){var n,e=t.val(),r=i.split("/"),a=r[r.length-2];n="$"===o.line[0]?a:e[o.line],this.addToLineGraph({line:n,xCoord:e[o.xCoord.value],yCoord:e[o.yCoord.value]})}.bind(this))}.bind(this))}.bind(this))},FireGrapher.prototype.parsePathNode=function(i,t,o){return new RSVP.Promise(function(n){console.log("Calling parsePathNode() with index "+o);var e=t[o];if("*"===e[0])console.assert(o===t.length-1,"WHATTTT?"),console.log(o+": individual record"),console.log(i),n(i);else if("$"===e[0]){console.log(o+": param");var r=[];i.forEach(function(i){r.push(new RSVP.Promise(function(t){console.log(i),this.firebaseRef.child(i).once("value",function(o){console.log(o);var n=[];o.forEach(function(t){console.log(t.name()),n.push(i+t.name()+"/")}.bind(this)),t(n)}.bind(this))}.bind(this)))}.bind(this)),new RSVP.all(r).then(function(i){var e=[];i.forEach(function(i){i.forEach(function(i){e.push(i)})}),console.log(e),this.parsePathNode(e,t,o+1).then(function(i){console.log("Final paths: "+o),console.log(i),n(i)})}.bind(this))}else{console.log(o+": regular node");var a=[];i.forEach(function(i){a.push(i+=e+"/")}),this.parsePathNode(a,t,o+1).then(function(i){console.log("Final paths: "+o),console.log(i),n(i)})}}.bind(this))},FireGrapher.prototype.addToLineGraph=function(i){"undefined"==typeof this.graphData[i.line]&&(this.graphData[i.line]=[]),this.graphData[i.line][i.xCoord]=i.yCoord;var t=this.graphLines[i.line];"undefined"==typeof t?(t=d3.svg.line().x(function(i,t){return this.interpolateXCoord(t)}.bind(this)).y(function(i){return this.interpolateYCoord(i)}.bind(this)).interpolate("basis"),this.graph.append("svg:path").attr("d",t(this.graphData[i.line])).attr("id",i.line),this.graphLines[i.line]=t):this.graph.select("#"+i.line).data([this.graphData[i.line]]).attr("d",t)},FireGrapher.prototype.drawGraph=function(){this.drawLineGraph()},FireGrapher.prototype.drawLineGraph=function(){this.graphData={},this.graphLines={},this.interpolateXCoord=d3.scale.linear().domain([this.config.xCoord.min,this.config.xCoord.max]).range([0,this.config.graph.width]),this.interpolateYCoord=d3.scale.linear().domain([this.config.yCoord.min,this.config.yCoord.max]).range([this.config.graph.height,0]),this.graph=d3.select(this.cssSelector).append("svg:svg").attr("width","100%").attr("height","100%"),this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+this.config.graph.height+")").call(d3.svg.axis().scale(d3.scale.linear().domain([this.config.xCoord.min,this.config.xCoord.max]).range([0,this.config.graph.width])).ticks(4).tickSubdivide(1).tickSize(-this.config.graph.height,-this.config.graph.height,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(d3.scale.linear().domain([this.config.yCoord.min,this.config.yCoord.max]).range([this.config.graph.height,0])).ticks(8).tickSubdivide(0).tickSize(-this.config.graph.width,-this.config.graph.width,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start")},FireGrapher}();"undefined"!=typeof module&&(module.exports=FireGrapher);