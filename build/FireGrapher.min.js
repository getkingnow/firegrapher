var FireGrapher=function(){"use strict";return FireGrapher=function(){},FireGrapher.prototype.graph=function(o,i,t){this.cssSelector=o,this.firebaseRef=i,this.updateConfig(t),this.drawGraph();var r=t.path.split("/");console.log(r),console.log("Parsing paths"),this.parsePathNode(["/"],r,0).then(function(o){console.log("Paths parsed"),console.log(o),o.forEach(function(o){console.log(o),this.firebaseRef.child(o).on("child_added",function(i){var r,n=i.val(),e=o.split("/"),h=e[e.length-2];r="$"===t.line[0]?h:n[t.line],this.addToLineGraph({line:r,xCoord:n[t.xCoord.value],yCoord:n[t.yCoord.value]})}.bind(this))}.bind(this))}.bind(this))},FireGrapher.prototype.parsePathNode=function(o,i,t){return new RSVP.Promise(function(r){console.log("Calling parsePathNode() with index "+t);var n=i[t];if("*"===n[0])console.assert(t===i.length-1,"WHATTTT?"),console.log(t+": individual record"),console.log(o),r(o);else if("$"===n[0]){console.log(t+": param");var e=[];o.forEach(function(o){e.push(new RSVP.Promise(function(i){console.log(o),this.firebaseRef.child(o).once("value",function(t){console.log(t);var r=[];t.forEach(function(i){console.log(i.name()),r.push(o+i.name()+"/")}.bind(this)),i(r)}.bind(this))}.bind(this)))}.bind(this)),new RSVP.all(e).then(function(o){var n=[];o.forEach(function(o){o.forEach(function(o){n.push(o)})}),console.log(n),this.parsePathNode(n,i,t+1).then(function(o){console.log("Final paths: "+t),console.log(o),r(o)})}.bind(this))}else{console.log(t+": regular node");var h=[];o.forEach(function(o){h.push(o+=n+"/")}),this.parsePathNode(h,i,t+1).then(function(o){console.log("Final paths: "+t),console.log(o),r(o)})}}.bind(this))},FireGrapher.prototype.addToLineGraph=function(o){"undefined"==typeof this.graphData[o.line]&&(this.graphData[o.line]=[]),this.graphData[o.line][o.xCoord]=o.yCoord;var i={xCoord:{},yCoord:{}};this.config.xCoord.min>o.xCoord&&(i.xCoord.min=o.xCoord),this.config.xCoord.max<o.xCoord&&(i.xCoord.max=o.xCoord),this.config.yCoord.min>o.yCoord&&(i.yCoord.min=o.yCoord),this.config.yCoord.max<o.yCoord&&(i.yCoord.max=o.yCoord),this.updateConfig(i),(i.xCoord.min||i.xCoord.max||i.yCoord.min||i.yCoord.max)&&this.syncConfig();var t=this.graphLines[o.line];"undefined"==typeof t?(t=d3.svg.line().x(function(o,i){return this.interpolateXCoord(i)}.bind(this)).y(function(o){return this.interpolateYCoord(o)}.bind(this)).interpolate("basis"),this.graph.append("svg:path").attr("d",t(this.graphData[o.line])).attr("id",o.line),this.graphLines[o.line]=t):this.graph.select("#"+o.line).data([this.graphData[o.line]]).attr("d",t)},FireGrapher.prototype.updateConfig=function(o){if(this.config=this.config?this.config:{},this.config.type=this.config.type?this.config.type:null,this.config.graph=this.config.graph?this.config.graph:{},this.config.xCoord=this.config.xCoord?this.config.xCoord:{},this.config.yCoord=this.config.yCoord?this.config.yCoord:{},this.config.type=o.type&&-1!==["grid","line","scatter"].indexOf(o.type)?o.type:this.config.type?this.config.type:null,null===this.config.type)throw new Error('Invalid chart type. Must be "grid", "line", or "scatter"');this.config.graph={width:o.graph&&o.graph.width?o.graph.width:this.config.graph.width?this.config.graph.width:500,height:o.graph&&o.graph.height?o.graph.height:this.config.graph.height?this.config.graph.height:150},this.config.xCoord={min:o.xCoord&&o.xCoord.min?o.xCoord.min:this.config.xCoord.min?this.config.xCoord.min:0,max:o.xCoord&&o.xCoord.max?o.xCoord.max:this.config.xCoord.max?this.config.xCoord.max:50},this.config.yCoord={min:o.yCoord&&o.yCoord.min?o.yCoord.min:this.config.yCoord.min?this.config.yCoord.min:0,max:o.yCoord&&o.yCoord.max?o.yCoord.max:this.config.yCoord.max?this.config.yCoord.max:200}},FireGrapher.prototype.syncConfig=function(){console.log("Config has changed, syncing."),this.interpolateXCoord=d3.scale.linear().domain([this.config.xCoord.min,this.config.xCoord.max]).range([0,this.config.graph.width]),this.interpolateYCoord=d3.scale.linear().domain([this.config.yCoord.min,this.config.yCoord.max]).range([this.config.graph.height,0]),null!==this.graph.select(this.cssSelector+" g.x")[0][0]&&this.graph.select(this.cssSelector+" g.x").remove(),null!==this.graph.select(this.cssSelector+" g.y")[0][0]&&this.graph.select(this.cssSelector+" g.y").remove(),this.graph.append("g").attr("class","x axis").attr("transform","translate(0,"+this.config.graph.height+")").call(d3.svg.axis().scale(this.interpolateXCoord).ticks(4).tickSubdivide(1).tickSize(-this.config.graph.height,-this.config.graph.height,-50)).selectAll("text").attr("y",15).style("text-anchor","start"),this.graph.append("g").attr("class","y axis").call(d3.svg.axis().orient("left").scale(this.interpolateYCoord).ticks(8).tickSubdivide(0).tickSize(-this.config.graph.width,-this.config.graph.width,-50)).selectAll("text").attr("x",5).attr("y",-10).style("text-anchor","start")},FireGrapher.prototype.drawGraph=function(){this.drawLineGraph()},FireGrapher.prototype.drawLineGraph=function(){this.graphData={},this.graphLines={},this.graph=d3.select(this.cssSelector).append("svg:svg").attr("width","100%").attr("height","100%"),this.syncConfig()},FireGrapher}();"undefined"!=typeof module&&(module.exports=FireGrapher);